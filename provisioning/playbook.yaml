---
- hosts: All
  become: yes
  tasks:

  - name: Copy timezone
    ansible.builtin.copy:
      src: /usr/share/zoneinfo/Europe/Moscow
      dest: /etc/localtime
      owner: root

  - name: Restart chronyd
    ansible.builtin.systemd:
      name: chronyd
      state: restarted
      enabled: yes

  - name: Update the rpm
    ansible.builtin.dnf:
      name:
        - rpm
      state: latest
      update_only: yes

  - name: Stopped firewalld
    ansible.builtin.systemd:
      name: firewalld
      state: stopped
      enabled: false

  - name: Put SELinux in permissive mode, logging actions that would be blocked.
    ansible.posix.selinux:
      policy: targeted
      state: permissive

  - name: Add postgres repository
    ansible.builtin.shell:
      cmd: dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm

  - name: Disabled old postgres modules
    ansible.builtin.shell:
      cmd: dnf -qy module disable postgresql

  - name: Install packages
    ansible.builtin.dnf:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - nano
      - mc
      - python3
      - epel-release

- hosts: Nodes
  become: yes
  tasks:

  - name: Install packages
    ansible.builtin.dnf:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - postgresql15-server
      - barman-cli

- hosts: Master
  become: yes
  tasks:

  - name: Initdb cluster postgres
    ansible.builtin.shell:
      cmd: /usr/pgsql-15/bin/postgresql-15-setup initdb

  - name: Restart postgres
    ansible.builtin.systemd:
      name: postgresql-15
      state: started
      enabled: yes

  - name: Create role Replicator
    ansible.builtin.shell:
      cmd: echo "CREATE ROLE replicator WITH LOGIN REPLICATION Encrypted PASSWORD 'Otus2022';" | sudo -u postgres psql

  - name: Create role Barman
    ansible.builtin.shell:
      cmd: echo "CREATE ROLE barman WITH LOGIN REPLICATION SUPERUSER Encrypted PASSWORD 'Otus2022';" | sudo -u postgres psql

  - name: Copy conf files
    ansible.builtin.copy:
      src: ./files/conf-m/
      dest: /var/lib/pgsql/15/data
      owner: postgres
      group: postgres
      mode: 0600

  - name: Restart postgres
    ansible.builtin.systemd:
      name: postgresql-15
      state: restarted
      enabled: yes

  - name: Create folders for ssh keys
    ansible.builtin.shell:
      cmd: mkdir /var/lib/pgsql/.ssh && chown postgres:postgres /var/lib/pgsql/.ssh

  - name: Generate an OpenSSH for user Postgres
    community.crypto.openssh_keypair:
      path: /var/lib/pgsql/.ssh/id_rsa
      owner: postgres

  - name: Copy id_rsa.pub in ./files/ to host machine
    ansible.builtin.fetch:
      src: /var/lib/pgsql/.ssh/id_rsa.pub
      dest: ./files/

- hosts: Slave
  become: yes
  tasks:

  - name: Copy data from Master
    ansible.builtin.shell:
      cmd: export PGPASSWORD='Otus2022' && pg_basebackup -h 192.168.56.10 -U replicator -p 5432 -D /var/lib/pgsql/15/data/ -R -P

  - name: Copy conf files
    ansible.builtin.copy:
      src: ./files/conf-s/
      dest: /var/lib/pgsql/15/data
      owner: postgres
      group: postgres
      mode: 0600

  - name: Copy data from Master
    ansible.builtin.shell:
      cmd: chown -R postgres:postgres /var/lib/pgsql/15/

  - name: Restart postgres
    ansible.builtin.systemd:
      name: postgresql-15
      state: restarted
      enabled: yes

- hosts: Barman
  become: yes
  tasks:

  - name: Install packages
    ansible.builtin.dnf:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - barman
      - postgresql15

  - name: Create folders for ssh keys
    ansible.builtin.shell:
      cmd: mkdir /var/lib/barman/.ssh && chown barman:barman /var/lib/barman/.ssh

  - name: Copy id_rsa.pub files for Master
    ansible.builtin.copy:
      src: ./files/Master/var/lib/pgsql/.ssh/id_rsa.pub
      dest: /var/lib/barman/.ssh/authorized_keys
      owner: barman

  - name: Generate an OpenSSH for user Barman
    community.crypto.openssh_keypair:
      path: /var/lib/barman/.ssh/id_rsa
      owner: barman

  - name: Copy id_rsa.pub in ./files/ to host machine
    ansible.builtin.fetch:
      src: /var/lib/barman/.ssh/id_rsa.pub
      dest: ./files/

  - name: Create .pgpass
    ansible.builtin.shell:
      cmd: touch /var/lib/barman/.pgpass && echo "192.168.56.10:5432:*:barman:Otus2022" > /var/lib/barman/.pgpass && chmod 0600 /var/lib/barman/.pgpass && chown barman:barman /var/lib/barman/.pgpass

  - name: Copy barman.conf
    ansible.builtin.copy:
      src: ./files/barman.conf 
      dest: /etc/barman.conf
      owner: barman
      group: barman
      mode: 0755

  - name: Copy master.conf
    ansible.builtin.copy:
      src: ./files/master.conf 
      dest: /etc/barman.d/master.conf                 
      owner: barman
      group: barman
      mode: 0755

- hosts: Master
  become: yes
  tasks:

  - name: Copy id_rsa.pub files for Master
    ansible.builtin.copy:
      src: ./files/Barman/var/lib/barman/.ssh/id_rsa.pub
      dest: /var/lib/pgsql/.ssh/authorized_keys
      owner: postgres

- hosts: Barman
  become: yes
  tasks:

  - name: Barman switch-wal master
    become_user: barman
    ansible.builtin.shell:
      cmd: barman switch-wal master

  - name: Barman cron
    become_user: barman
    ansible.builtin.shell:
      cmd: barman cron
